//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfApp6.AppDate
{
    using System;
    using System.Collections.Generic;
    using System.IO;

   

public partial class Carss
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Carss()
        {
            this.bron = new HashSet<bron>();
            this.bron1 = new HashSet<bron>();
            this.izbr = new HashSet<izbr>();
        }

        public int id { get; set; }
        public string model { get; set; }
        public int id_marki { get; set; }
        public int id_str { get; set; }
        public int god_poiz { get; set; }
        public int id_cvet { get; set; }
        public int id_salona { get; set; }
        public int id_kompl { get; set; }
        public byte[] image { get; set; }
        public Nullable<int> price { get; set; }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<bron> bron { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<bron> bron1 { get; set; }
        public virtual compl compl { get; set; }
        public virtual cveta cveta { get; set; }
        public virtual Marks Marks { get; set; }
        public virtual salonch salonch { get; set; }
        public virtual strana strana { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<izbr> izbr { get; set; }
        public string CurrentPhoto
        {
            get
            {
                // If we have image data, return a temporary file path
                if (image != null && image.Length > 0)
                {
                    string tempFile = Path.GetTempFileName();
                    File.WriteAllBytes(tempFile, image);
                    return tempFile;
                }

                // Otherwise return default image
                return Path.Combine(Directory.GetCurrentDirectory(), "img", "picture.jpg");
            }
        }
    }

}
